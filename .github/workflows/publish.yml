name: Publish

on:
  push:
    tags:
      - v[0-9]+.*
  workflow_dispatch:
    inputs:
      TAG:
        description: 'The tag to publish'
        required: true


defaults:
  run:
    shell: bash

env:
  VERSION: ${{ github.event.inputs.TAG || github.ref_name }}

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download artifacts
        run: |
          gh release download ${{env.VERSION}} --dir ./amd64 --pattern *x86_64-unknown-linux-gnu*
          ls ./amd64
          find ./amd64 -name "*.tar.gz" -exec tar -xf {} -C ./amd64 \;
          ls -R ./amd64
          gh release download ${{env.VERSION}} --dir ./arm64 --pattern *aarch64-unknown-linux-gnu*
          find ./arm64 -name "*.tar.gz" -exec tar -xf {} -C ./arm64 \;
          ls -R ./arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine if release is marked as latest
        id: check_latest
        run: |
          LATEST_RELEASE=$(gh release list --exclude-pre-releases --json tagName,isLatest --jq ".[] | select(.isLatest == true) | .tagName" | head -n 1)
           if [ "${{ env.VERSION }}" == "$LATEST_RELEASE" ]; then
            echo "isLatest=true" >> $GITHUB_OUTPUT
          else
            echo "isLatest=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Argon Node
        uses: ./.github/templates/docker
        with:
          image: ghcr.io/argonprotocol/argon-miner
          bin: argon-node
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flavor: ${{ steps.check_latest.outputs.isLatest == 'true' && 'latest=true' || 'latest=false' }}
          tags: |
            type=semver,pattern=${{env.VERSION}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Notary
        uses: ./.github/templates/docker
        with:
          image: ghcr.io/argonprotocol/argon-notary
          bin: argon-notary
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flavor: ${{ steps.check_latest.outputs.isLatest == 'true' && 'latest=true' || 'latest=false' }}
          tags: |
            type=semver,pattern=${{env.VERSION}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
  npm:
    name: Publish
    permissions:
      id-token: write  # Grant write access to the id-token permission for this job
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: yarn install

      - name: Build client
        run: yarn tsc
        working-directory: ./client/nodejs

      - name: Download all artifacts
        run: gh release download ${{ env.VERSION }} --dir ./localchain/artifacts --pattern *.node
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Move artifacts
        run: yarn artifacts
        working-directory: ./localchain

      - name: Verify artifacts
        run: ls -R ./npm
        working-directory: ./localchain

      - name: Publish mainchain
        if: ${{ vars.NPM_ENABLED == 'true' }}
        run: |
          npm publish --provenance --access public --workspace=client/nodejs
          npm publish --provenance --access public --workspace=localchain
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
