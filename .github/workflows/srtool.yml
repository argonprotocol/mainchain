name: Build Deterministic Runtimes

env:
  SUBWASM_VERSION: 0.21.3
  BUILD_OPTS: --features on-chain-release-build

on:
  release:
    types: [ published ]
  workflow_dispatch:

jobs:
  srtool:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - runtime: argon
            package: argon-runtime
          - runtime: canary
            package: argon-canary-runtime
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Get Rust version from rust-toolchain.toml
        id: rustver
        run: |
          RUST_VERSION=$(grep '^channel' rust-toolchain.toml | awk -F\" '{print $2}')
          echo "RUST_VERSION=$RUST_VERSION" >> $GITHUB_ENV

      - name: Build custom srtool image (Rust ${{ env.RUST_VERSION }})
        run: |
          git clone https://github.com/paritytech/srtool.git --depth 1
          cd srtool
          docker build --build-arg RUSTC_VERSION=${{ env.RUST_VERSION }} -t srtool .

      - id: build
        name: Build ${{ matrix.package }} using srtool
        shell: bash
        run: |
          echo ::group::Srtool build of chain ${{ matrix.runtime }}
          CMD="docker run -i --rm \
            -e PACKAGE=${{ matrix.package }} \
            -e RUNTIME_DIR=runtime/${{ matrix.runtime }} \
            -e BUILD_OPTS \
            -e PROFILE=release \
            -v ${{ github.workspace }}:/build \
            srtool build --app --json -cM"
          
          echo ::debug::build::docker_run $CMD
          JSON=$($CMD | tee /dev/stderr | tail -1)
          echo "json=$JSON" >> $GITHUB_OUTPUT
          echo $JSON | jq . > ${{ matrix.runtime }}-srtool-digest.json
          cat ${{ matrix.runtime }}-srtool-digest.json
        
          PROP=`echo $JSON | jq -r .runtimes.compact.prop`
          echo "proposal_hash=$PROP" >> $GITHUB_OUTPUT

          WASM=`echo $JSON | jq -r .runtimes.compact.wasm`
          echo "wasm=$WASM" >> $GITHUB_OUTPUT
          echo "Runtime location: $WASM"
          ls -la $(dirname $WASM)

          Z_WASM=`echo $JSON | jq -r .runtimes.compressed.wasm`
          echo "wasm_compressed=$Z_WASM" >> $GITHUB_OUTPUT

          IPFS=`echo $JSON | jq -r .runtimes.compact.ipfs`
          echo "ipfs=$IPFS" >> $GITHUB_OUTPUT
          echo ::endgroup::

      - name: Archive Runtime
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.runtime }}-runtime
          path: |
            ${{ steps.build.outputs.wasm }}
            ${{ steps.build.outputs.wasm_compressed }}
            ${{ matrix.runtime }}-srtool-digest.json

      # We now get extra information thanks to subwasm,
      - name: Install subwasm ${{ env.SUBWASM_VERSION }}
        run: |
          wget https://github.com/chevdor/subwasm/releases/download/v${{ env.SUBWASM_VERSION }}/subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          sudo dpkg -i subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          subwasm --version
      - name: Show Runtime information
        run: |
          subwasm info ${{ steps.build.outputs.wasm }}
          subwasm info ${{ steps.build.outputs.wasm_compressed }}
          subwasm --json info ${{ steps.build.outputs.wasm }} > ${{ matrix.runtime }}-info.json
          subwasm --json info ${{ steps.build.outputs.wasm_compressed }} > ${{ matrix.runtime }}-info_compressed.json
      - name: Extract the metadata
        run: |
          subwasm meta ${{ steps.build.outputs.wasm }}
          subwasm --json meta ${{ steps.build.outputs.wasm }} > ${{ matrix.runtime }}-metadata.json
      - name: Check the metadata diff
        run: |
          subwasm diff ${{ steps.build.outputs.wasm }} --chain-b ${{ matrix.runtime }} | tee ${{ matrix.runtime }}-diff.txt

      - name: Archive Subwasm results
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.runtime }}-results
          path: |
            ${{ matrix.runtime }}-info.json
            ${{ matrix.runtime }}-info_compressed.json
            ${{ matrix.runtime }}-metadata.json
            ${{ matrix.runtime }}-diff.txt

      # Release published: add artifacts to release
      - name: Add artifacts to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/v')
        with:
          append_body: true
          tag_name: ${{ github.ref_name }}
          body: |
            ## Runtime: `${{ matrix.runtime }}`
            ```
            🏋️ Runtime Size:           ${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.size }} bytes
            🔥 Core Version:           ${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.core_version.specName }}-${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.core_version.specVersion }}
            🎁 Metadata version:       V${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.metadata_version }}
            🗳️ system.setCode hash:    ${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.proposal_hash }}
            🗳️ authorizeUpgrade hash:  ${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.parachain_authorize_upgrade_hash }}
            🗳️ Blake2-256 hash:        ${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.blake2_256 }}
            📦 IPFS:                   ${{ fromJSON(steps.build.outputs.json).runtimes.compressed.subwasm.ipfs_hash }}
            ```
          files: |
            ${{ steps.build.outputs.wasm_compressed }}
            ${{ matrix.runtime }}-srtool-digest.json
            ${{ matrix.runtime }}-info_compressed.json
            ${{ matrix.runtime }}-metadata.json
