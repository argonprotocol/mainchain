name: Cache rust dependencies
description: |
  Shared config to cache rust dependencies

inputs:
  github-token:
    description: 'The github token'
    required: true
  name:
    description: 'The name of the cache'
    required: true
  save:
    description: 'Whether to save the cache'
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Print space before restore
      run: df -h
      shell: bash
    - name: Get rustc version
      id: rust-version
      run: echo "version=$(rustc --version --verbose | grep 'release:' | awk '{print $2}')" >> "$GITHUB_OUTPUT"
      shell: bash
    - name: Get OS version string
      id: os_version
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          echo "version=$(source /etc/os-release && echo $ID-$VERSION_ID)" >> $GITHUB_OUTPUT
          sudo mkdir -p /mnt/target
          sudo chown -R $USER:$USER /mnt/target
          sudo rm -rf target
          sudo ln -s /mnt/target target
          echo "CARGO_TARGET_DIR=/mnt/target" >> $GITHUB_ENV
        elif [ "$RUNNER_OS" == "macOS" ]; then
          echo "version=macos-$(sw_vers -productVersion)" >> $GITHUB_OUTPUT
        elif [ "$RUNNER_OS" == "Windows" ]; then
          ver_str=$(cmd /c ver)
          echo "version=windows-$(echo $ver_str | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_OUTPUT
        fi
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          .cargo-cache
          target/
        key: ${{ inputs.name }}-${{ steps.os_version.outputs.version }}-${{ steps.rust-version.outputs.version }}-${{ hashFiles('./Cargo.lock') }}
        restore-keys: |
          ${{ inputs.name }}-${{ steps.os_version.outputs.version }}-${{ steps.rust-version.outputs.version }}-
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
    - name: Print space after restore
      run: |
        echo "Disk space after restore:"
        df -h
        echo "Cargo cache size:"
        du -sh ~/.cargo/registry/index/ 2>/dev/null || true
        du -sh ~/.cargo/registry/cache/ 2>/dev/null || true
        du -sh ~/.cargo/git/db/ 2>/dev/null || true
        du -sh .cargo-cache 2>/dev/null || true
        du -sh target/ 2>/dev/null || true
      shell: bash
