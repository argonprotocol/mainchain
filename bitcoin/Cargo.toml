[package]
name = "argon-bitcoin"
description = "Modules for creating an unlocking timeline scripts for bitcoin vaults"
version.workspace = true
edition.workspace = true
authors.workspace = true
homepage.workspace = true
license.workspace = true
rust-version.workspace = true
repository.workspace = true
documentation.workspace = true

[dependencies]
thiserror = { workspace = true }
codec = { workspace = true, default-features = false }

polkadot-sdk = { workspace = true, features = ["sp-runtime", "sp-core", "sp-io"] }
bitcoin = { workspace = true, default-features = false }
miniscript = { workspace = true, default-features = false, features = ["compiler", "no-std"] }
k256 = { workspace = true, features = ["alloc", "ecdsa"], default-features = false }
bitcoincore-rpc = { workspace = true, optional = true }

anyhow = { workspace = true, optional = true }

parking_lot = { workspace = true, optional = true }
hwi = { workspace = true, optional = true }

argon-primitives = { workspace = true, default-features = false, features = ["bitcoin"] }
log = { workspace = true }
minreq = { workspace = true, optional = true, features = ["https", "json-using-serde"] }
serde_json = { workspace = true }
url = { workspace = true, default-features = false }
tokio = { workspace = true, optional = true }

[dev-dependencies]
polkadot-sdk = { workspace = true, features = ["frame-support", "sp-keyring"], default-features = true }
argon-testing = { workspace = true }
bitcoind = { workspace = true }
base64 = { workspace = true }
bitcoin = { workspace = true, features = ["base64"] }
serial_test = { workspace = true }


[features]
default = [ "std" ]
std = [
	"anyhow/std",
	"argon-primitives/bitcoin",
	"argon-primitives/std",
	"bitcoin/std",
	"bitcoincore-rpc/default",
	"codec/std",
	"k256/std",
	"log/std",
	"miniscript/std",
	"minreq",
	"parking_lot/default",
	"polkadot-sdk/std",
	"serde_json/std",
	"thiserror/std",
	"tokio",
	"url/std",
]
hwi = [ "dep:hwi" ]
