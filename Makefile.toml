[config]
default_to_workspace = false
skip_core_tasks = true
init_task = "prep"
end_task = "stat"

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = "true"
SCCACHE_CACHE_SIZE = "20G"

[tasks.prep]
description = "Ensure all tools are installed"
script = [
    "sccache --show-stats || cargo binstall sccache@^0.7 --no-confirm || true",
    "sccache --start-server || true"
]

[tasks.lint]
description = "Run clippy"
command = "cargo"
args = ["clippy", "--workspace", "--release", "--fix"]

[tasks.fmt]
description = "Run rustfmt"
toolchain = "nightly"
command = "cargo"
args = ["fmt", "--all"]

[tasks.zepter]
description = "Run zepter"
command = "zepter"
args = ["run", "default"]
install_crate_args = ["--no-confirm"]

[tasks.zepter.install_crate]
crate_name = "zepter"
binary = "zepter"
test_arg = "--version"
install_command = "binstall"
force = false
version = "^0.15"

[tasks.format]
description = "Run zepter and fmt"
dependencies = ["zepter", "fmt"]

[tasks.docker]
description = "Build docker image"
script = [
    "docker buildx build -t ghcr.io/ulixee/ulixee-miner:dev . -f dev.Dockerfile --target ulx-node",
    "docker buildx build -t ghcr.io/ulixee/ulixee-notary:dev . -f dev.Dockerfile --target ulx-notary",
]

[tasks.sqlx-setup]
description = "Run sqlx setup"
script = [
    "cd localchain && cargo sqlx database setup || true",
    "cd ..",
    "cd notary && cargo sqlx database setup || true",
]
install_crate_args = ["--no-confirm"]

[tasks.sqlx-setup.install_crate]
crate_name = "sqlx-cli"
binary = "sqlx"
test_arg = "--version"
install_command = "binstall --no-confirm"
version = "^0.7"

[tasks.sqlx]
description = "Run sqlx prepare"
command = "cargo"
args = ["sqlx", "prepare", "--workspace", "--", "--profile=test"]
dependencies = ["sqlx-setup"]

[tasks.stat]
description = "Show sccache stats"
command = "sccache"
args = ["--show-stats"]

[tasks.build]
description = "Compiles the project"
command = "cargo"
args = ["build", "--features", "fast-runtime"]
env = { "RUSTC_WRAPPER" = "sccache" }
dependencies = ["sqlx-setup"]

[tasks.update-metadata]
description = "Update metadata"
script = "client/update.sh"
dependencies = ["build"]

[tasks.test]
description = "Run tests with nextest,"
command = "cargo"
args = ["nextest", "run", "--features", "fast-runtime"]
dependencies = ["build"]
env = { "RUSTC_WRAPPER" = "sccache" }
install_crate_args = ["--no-confirm"]

[tasks.test.install_crate]
crate_name = "cargo-nextest"
binary = "nextest"
test_arg = "--version"
install_command = "binstall"
version = "^0.9"

[tasks.watch]
description = "Watch for changes and rebuild"
command = "cargo"
args = ["watch", "-x", "build", "--features", "fast-runtime"]
env = { "RUSTC_WRAPPER" = "sccache" }
install_crate_args = ["--no-confirm"]
dependencies = ["sqlx-setup"]

[tasks.watch.install_crate]
crate_name = "cargo-watch"
version = "7.8"
binary = "cargo-watch"
test_arg = "--version"
force = false
install_command = "binstall"
