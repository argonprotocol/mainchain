## Shared configs
x-oracle-config: &oracle
  image: ghcr.io/argonprotocol/argon-oracle:${VERSION:-latest}
  user: root
  build:
    context: .
    dockerfile: dev.Dockerfile
    target: oracle
  restart: on-failure
x-notary-config: &notary
  image: ghcr.io/argonprotocol/argon-notary:${VERSION:-latest}
  user: root
  build:
    context: .
    dockerfile: dev.Dockerfile
    target: argon-notary
  restart: on-failure
x-node-config: &node
  image: ghcr.io/argonprotocol/argon-miner:${VERSION:-latest}
  build:
    context: .
    dockerfile: dev.Dockerfile
    target: argon-node
  restart: on-failure
x-bitcoin-config: &bitcoin
  image: ghcr.io/argonprotocol/bitcoin-unverified-node:latest
  build:
    context: .
    dockerfile: docker/bitcoin.Dockerfile
  user: "0:0"
  restart: on-failure
  volumes:
    - bitcoin-data:/bitcoin
x-cli-config: &cli
  image: node:20-slim
  build:
    context: .
    dockerfile: docker/nodejs.Dockerfile
  working_dir: /app
  restart: on-failure

services:
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "0:9000"
      - "0:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: >
        curl -f "http://localhost:9000/minio/health/live" || exit 1
      interval: 5s
      retries: 10

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: notary
    ports:
      - "0:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 10

  bitcoin:
    <<: *bitcoin
    entrypoint: ["bitcoind"]
    command:
      - --chain=regtest
      - --rpcport=18443
      - --rpcauth=bitcoin:7042dd0e1fd98669067098457a9f0859$95bc3e06d791b3c56e5fa17665cb341e35f1e48a7b5f43ad88a39d5b211327b5
      - --rpcbind=0.0.0.0
      - --rpcallowip=0.0.0.0/0
      - --port=18444
      - --listen=1
      - --fallbackfee=0.0001
      - --datadir=/bitcoin
      - --blockfilterindex
      - --txindex
      - --wallet=mining
    ports:
      - "0:18443"
      - "0:18444"
    healthcheck:
      test: >
        echo '{"jsonrpc":"1.0","id":"curltest","method":"getblockchaininfo","params":[]}' | curl --fail -s --user bitcoin:bitcoin -H "content-type: text/plain;" --data-binary @- http://localhost:18443/
      interval: 5s
      retries: 10

  bitcoin-electrs:
    image: mempool/electrs:v3.2.0
    restart: on-failure
    user: "0:0"
    ports:
      - "50001:50001"  # Electrum server protocol
      - "3002:3002" # Esplora HTTP API
    volumes:
      - bitcoin-data:/bitcoin
      - electrs-data:/electrs
    command: |
      --network regtest
      --db-dir /electrs
      --daemon-dir /bitcoin
      --daemon-rpc-addr bitcoin:18443
      --cookie bitcoin:bitcoin
      --electrum-rpc-addr 0.0.0.0:50001
      --http-addr 0.0.0.0:3002
      --cors "*"
    depends_on:
      bitcoin-miner:
        condition: service_started

  bitcoin-wallet-init:
    <<: *bitcoin
    command: >
      sh -c '
        set -e
        # if the conf file does not exist, create it
        if [ ! -f /bitcoin/bitcoin.conf ]; then
          mkdir -p /bitcoin
          echo "[regtest]" > /bitcoin/bitcoin.conf
          echo "rpcuser=bitcoin" >> /bitcoin/bitcoin.conf
          echo "rpcpassword=bitcoin" >> /bitcoin/bitcoin.conf
          echo "rpcconnect=bitcoin" >> /bitcoin/bitcoin.conf
          echo "rpcport=18443" >> /bitcoin/bitcoin.conf
          echo "txindex=1" >> /bitcoin/bitcoin.conf
          echo "blockfilterindex=1" >> /bitcoin/bitcoin.conf
          echo "wallet=mining" >> /bitcoin/bitcoin.conf
        fi
        echo "Bitcoin conf created at /bitcoin/bitcoin.conf"
        echo $(bitcoin-cli -regtest -datadir=/bitcoin -conf=/bitcoin/bitcoin.conf getwalletinfo)
        if ! bitcoin-cli -regtest -datadir=/bitcoin -conf=/bitcoin/bitcoin.conf getwalletinfo >/dev/null 2>&1; then
          echo "Creating Bitcoin wallet..."
          bitcoin-cli -regtest -datadir=/bitcoin -conf=/bitcoin/bitcoin.conf createwallet mining 2>/dev/null \
          || bitcoin-cli -regtest -datadir=/bitcoin -conf=/bitcoin/bitcoin.conf loadwallet mining
        fi
        echo "Bitcoin wallet initialized"
      '
    depends_on:
      bitcoin:
        condition: service_healthy

  bitcoin-init:
    <<: *bitcoin
    command: /scripts/bitcoin-init.sh
    environment:
      BITCOIN_CLI_ARGS: >-
        -regtest
        -datadir=/bitcoin
        -conf=/bitcoin/bitcoin.conf
        -rpcwallet=mining
    depends_on:
      bitcoin-wallet-init:
        condition: service_completed_successfully

  bitcoin-miner:
    <<: *bitcoin
    command: /scripts/bitcoin-mine.sh
    environment:
      BITCOIN_CLI_ARGS: >-
        -regtest
        -datadir=/bitcoin
        -conf=/bitcoin/bitcoin.conf
        -rpcwallet=mining
      INTERVAL_SECONDS: 20 # needs to be 10 ticks, which are 2 seconds in regtest
    depends_on:
      bitcoin-init:
        condition: service_completed_successfully

  # send 2 BTC to an arbitrary address
  # docker compose --profile tooling run --rm btc-cli sendtoaddress bcrt1q... 2.0
  #
  ## mine 15 blocks to the given address
  # docker compose --profile tooling run --rm btc-cli generatetoaddress 15 bcrt1q...
  btc-cli:
    <<: *bitcoin
    entrypoint:
      - bitcoin-cli
      - -regtest
      - -datadir=/bitcoin
      - -conf=/bitcoin/bitcoin.conf
      - -rpcwallet=mining
    profiles: [tooling]   # keeps it out of the default `up`

  archive-node:
    <<: *node
    depends_on:
      bitcoin:
        condition: service_healthy
      bitcoin-init:
        condition: service_completed_successfully
    command: >
      --alice
      --compute-miners=1
      --port=30334
      --rpc-port=9944
      --node-key=16ec4f460237d066d15d09a44959a7d49ea6405e98429826f1c28b9087bd60ea
      --base-path=/data
      --chain=local
      --bitcoin-rpc-url=http://bitcoin:bitcoin@bitcoin:18443
      --notebook-archive-hosts=http://minio:9000
      --no-mdns
      --network-backend=libp2p
      --no-telemetry
      --detailed-log-output
      --rpc-cors=all
      --rpc-methods=unsafe
      --unsafe-rpc-external
      --validator
      --pruning=archive
    ports:
      - "${RPC_PORT:-9944}:9944"
      - "0:30334"
    volumes:
      - archive-data:/data
    environment:
      RUST_LOG: info,argon=info,pallet=trace
    healthcheck:
      test:
        - CMD-SHELL
        - >
          curl -fsS -H 'Content-Type: application/json' \
            -d '{"id":1,"jsonrpc":"2.0","method":"system_health","params":[]}' \
            http://127.0.0.1:9944 > /dev/null || exit 1
      interval: 5s
      timeout: 5s
      start_period: 30s
      retries: 12

  miner-1:
    <<: *node
    depends_on:
      bitcoin:
        condition: service_healthy
      bitcoin-init:
        condition: service_completed_successfully
      archive-node:
        condition: service_healthy
    command: >
      --bob
      --compute-miners=1
      --port=30335
      --rpc-port=9944
      --node-key=f1425b14b3333b7e20bead4d3c3bcc35c908609c843194bb9753e2af6374a87f
      --base-path=/data
      --bootnodes=/dns/archive-node/tcp/30334/p2p/12D3KooWMdmKGEuFPVvwSd92jCQJgX9aFCp45E8vV2X284HQjwnn
      --chain=local
      --bitcoin-rpc-url=http://bitcoin:bitcoin@bitcoin:18443
      --notebook-archive-hosts=http://minio:9000
      --no-mdns
      --network-backend=libp2p
      --no-telemetry
      --detailed-log-output
      --rpc-cors=all
      --rpc-methods=unsafe
      --unsafe-rpc-external
      --validator
      --pruning=archive
    ports:
      - "0:9944"
      - "0:30335"
    volumes:
      - miner1-data:/data
    environment:
      RUST_LOG: info,argon=info,pallet=trace
    healthcheck:
      test:
        - CMD-SHELL
        - >
          curl -fsS -H 'Content-Type: application/json' \
            -d '{"id":1,"jsonrpc":"2.0","method":"system_health","params":[]}' \
            http://127.0.0.1:9944 | jq -e '.result.peers > 0' > /dev/null || exit 1
      interval: 5s
      timeout: 3s
      start_period: 30s   # allow sync & libp2p dial time
      retries: 12
    profiles:
      - miners
      - bob
      - all

  miner-1-bidder:
    <<: *cli
    command:
      - /bin/sh
      - -c
      - |
        set -e
        cd client/nodejs || true
        if [ -f lib/cli.js ]; then
          echo "Using local CLI"
          CLI="node lib/cli.js"
        else
          echo "Using npx CLI"
          CLI="npx --yes @argonprotocol/mainchain"
        fi
        set -x
        $$CLI accounts create --path=/accounts/bob.json --register-keys-to=http://miner-1:9944 --account-suri=//Bob -s=0-99
        exec $$CLI mining bid --env=/accounts/bob.json --max-bid=0.5 --run-continuous
    environment:
      - MAINCHAIN_URL=ws://archive-node:9944
    depends_on:
      miner-1:
        condition: service_healthy
    restart: on-failure
    volumes:
      - miner1-data:/accounts
    profiles:
      - miners
      - all

  miner-2:
    <<: *node
    depends_on:
      bitcoin:
        condition: service_healthy
      bitcoin-init:
        condition: service_completed_successfully
      archive-node:
        condition: service_healthy
    command: >
      --dave
      --compute-miners=1
      --port=30336
      --rpc-port=9944
      --node-key=7e730d590cea52bc2219249da8647147ef53d5dbd00840ea8ed6d00d5f747935
      --public-addr=/dns/miner-2/tcp/30336/p2p/12D3KooWJSbmepuSKfkxNq8aPeqr3oRQsN3E7SyprkzSuqR1nu23
      --base-path=/data
      --bootnodes=/dns/archive-node/tcp/30334/p2p/12D3KooWMdmKGEuFPVvwSd92jCQJgX9aFCp45E8vV2X284HQjwnn
      --chain=local
      --bitcoin-rpc-url=http://bitcoin:bitcoin@bitcoin:18443
      --notebook-archive-hosts=http://minio:9000
      --no-mdns
      --network-backend=libp2p
      --no-telemetry
      --detailed-log-output
      --rpc-cors=all
      --rpc-methods=unsafe
      --unsafe-rpc-external
      --validator
      --pruning=archive
    ports:
      - "0:9944"
      - "0:30336"
    volumes:
      - miner2-data:/data
    environment:
      RUST_LOG: info,argon=info,pallet=trace
    healthcheck:
      test:
        - CMD-SHELL
        - >
          curl -fsS -H 'Content-Type: application/json' \
            -d '{"id":1,"jsonrpc":"2.0","method":"system_health","params":[]}' \
            http://127.0.0.1:9944 | jq -e '.result.peers > 0' > /dev/null || exit 1
      interval: 5s
      timeout: 3s
      start_period: 30s   # allow sync & libp2p dial time
      retries: 12
    profiles:
      - miners
      - dave
      - all

  miner-2-bidder:
    <<: *cli
    command:
      - /bin/sh
      - -c
      - |
        set -e
        cd client/nodejs || true
        if [ -f lib/cli.js ]; then
          echo "Using local CLI"
          CLI="node lib/cli.js"
        else
          echo "Using npx CLI"
          CLI="npx --yes @argonprotocol/mainchain"
        fi
        set -x
        $$CLI accounts create --path=/accounts/dave.json --register-keys-to=http://miner-2:9944 --account-suri=//Dave -s=0-49
        exec $$CLI mining bid --env=/accounts/dave.json --max-bid=2 --max-seats=5 --bid-delay=2 --run-continuous
    environment:
      - MAINCHAIN_URL=ws://archive-node:9944
    depends_on:
      miner-2:
        condition: service_healthy
    volumes:
      - miner2-data:/accounts
    profiles:
      - miners
      - all

  notary-insert-key:
    <<: *notary
    command: insert-key --keystore-path=/keystore --suri=//Ferdie//notary
    volumes:
      - notary-keystore:/keystore

  notary-migrate:
    <<: *notary
    environment:
      RUST_LOG: info
    command: migrate --db-url=postgres://postgres:password@postgres:5432/notary
    depends_on:
      postgres:
        condition: service_healthy

  notary:
    <<: *notary
    depends_on:
      notary-insert-key:
        condition: service_completed_successfully
      notary-migrate:
        condition: service_completed_successfully
      archive-node:
        condition: service_healthy
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
    command:
      - run
      - --operator-address=5CiPPseXPECbkjWCa6MnjNokrgYjMqmKndv2rSnekmSK2DjL
      - --db-url=postgres://postgres:password@postgres:5432/notary
      - --keystore-path=/keystore
      - --archive-endpoint=http://minio:9000
      - --dev
      - --bind-addr=0.0.0.0:9925
    ports:
      - "0:9925"
    volumes:
      - notary-keystore:/keystore
    networks:
      default:
        aliases:
          - notary.localhost
    environment:
      - TRUSTED_RPC_URL=ws://archive-node:9944

  oracle-btc-insert-key:
    <<: *oracle
    command:
      - insert-key
      - --keystore-path=/keystore
      - --suri=//Dave//oracle
      - --crypto-type=sr25519
    volumes:
      - oracle-btc-keystore:/keystore

  oracle-btc:
    <<: *oracle
    depends_on:
      oracle-btc-insert-key:
        condition: service_completed_successfully
      archive-node:
        condition: service_healthy
    command:
      - bitcoin
      - --keystore-path=/keystore
      - --signer-crypto=sr25519
      - --signer-address=5HKyaEJY4P4yAixU7pBDsnacNBNSmRGR7hkqgRnC9msvxecj
      - --bitcoin-rpc-url=http://bitcoin:bitcoin@bitcoin:18443
    volumes:
      - oracle-btc-keystore:/keystore
    environment:
      - TRUSTED_RPC_URL=ws://archive-node:9944

  oracle-price-insert-key:
    <<: *oracle
    command:
      - insert-key
      - --keystore-path=/keystore
      - --suri=//Eve//oracle
      - --crypto-type=sr25519
    volumes:
      - oracle-price-keystore:/keystore
    profiles:
      - price-oracle
      - all

  oracle-price:
    <<: *oracle
    depends_on:
      oracle-price-insert-key:
        condition: service_completed_successfully
      archive-node:
        condition: service_healthy
    command:
      - price-index
      - --keystore-path=/keystore
      - --signer-crypto=sr25519
      - --signer-address=5Hn1p9jNYatcvcyugRc3TRyfC6zvFGTAX4qe14RhqBYcfrkE
      - --simulate-prices
    volumes:
      - oracle-price-keystore:/keystore
      - /tmp/oracle/data/:/tmp/oracle/data/
    environment:
      - TRUSTED_RPC_URL=ws://archive-node:9944
      - ARGON_TOKEN_ADDRESS=${ARGON_TOKEN_ADDRESS:-3e622317f8C93f7328350cF0B56d9eD4C620C5d6}
      - ARGONOT_TOKEN_ADDRESS=${ARGONOT_TOKEN_ADDRESS:-3e622317f8C93f7328350cF0B56d9eD4C620C5d6}
      - BLS_API_KEY=${BLS_API_KEY}
      - INFURA_PROJECT_ID=${INFURA_PROJECT_ID}
      - ORACLE_CPI_CACHE_PATH=/tmp/oracle/data/US_CPI_State.json
    profiles:
      - price-oracle
      - all

volumes:
  minio-data:
  pgdata:
  bitcoin-data:
  electrs-data:
  archive-data:
  miner1-data:
  miner2-data:
  notary-keystore:
  oracle-btc-keystore:
  oracle-price-keystore:
