name: Build and Test
'on':
  push:
    branches:
      - main
  workflow_dispatch: null
#  pull_request: null

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
    #          - os: macos-latest
    #            target: x86_64-apple-darwin


    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    name: Build All ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space
        if: startsWith(matrix.os, 'ubuntu')
        uses: ./.github/templates/clear-space

      - name: Set Localchain Db Url
        working-directory: localchain
        run: echo "DATABASE_URL=sqlite://${{ runner.temp }}/temp.db" > .env

      - name: Install linux dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install -y clang libssl-dev llvm libudev-dev protobuf-compiler pkg-config

      - name: Install mac dependencies
        if: startsWith(matrix.os, 'macos')
        run: brew install protobuf

      - name: Start sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: sccache
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}
          max-size: 10G

      - uses: rui314/setup-mold@v1

      - uses: moonrepo/setup-rust@v1
        with:
          bins: cargo-make,sqlx-cli
          targets: ${{ matrix.target }},wasm32-unknown-unknown
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Migrate Notary Db
        working-directory: notary
        run: cargo sqlx database setup

      - name: Migrate Localchain Db
        working-directory: localchain
        run: cargo sqlx database setup

      - name: Test
        run: cargo make test-ci
        env:
          RUSTC_WRAPPER: "sccache"
          CARGO_INCREMENTAL: 0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Debug Assets
        uses: actions/upload-artifact@v4
        with:
          name: bins-${{ matrix.target }}
          path: target/debug/ulx-*
          if-no-files-found: error

  docker:
    name: Docker
    needs:
      - build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bins-${{ matrix.target }}
          path: .

      - name: List assets in root
        run: ls
        shell: bash

      - name: Node
        uses: ./.github/templates/docker
        with:
          image: ulixee/ulx-node
          build-args: 'BIN=ulx-node'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Notary
        uses: ./.github/templates/docker
        with:
          image: ulixee/ulx-notary
          build-args: 'BIN=ulx-notary'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
