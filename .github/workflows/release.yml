name: Release

permissions:
  contents: read

on:
  push:
    tags:
      - v[0-9]+.*

env:
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10
  CARGO_TERM_COLOR: always
  SQLX_OFFLINE: true

defaults:
  run:
    shell: bash


jobs:
  create-release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        with:
          title: $version
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    needs:
      - create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            bins: argon-node,argon-notary,argon-localchain,argon-bitcoin-cli,argon-oracle
          - target: x86_64-unknown-linux-gnu
            bins: argon-node,argon-notary,argon-localchain,argon-bitcoin-cli,argon-oracle
          - target: aarch64-apple-darwin
            os: macos-latest
            bins: argon-node,argon-notary,argon-localchain,argon-bitcoin-cli,argon-oracle
          - target: x86_64-apple-darwin
            os: macos-latest
            bins: argon-node,argon-notary,argon-localchain,argon-bitcoin-cli,argon-oracle
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os || 'ubuntu-22.04' }}
    timeout-minutes: 90
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Install linux dependencies
        if: (matrix.os == '' || startsWith(matrix.os, 'ubuntu'))
        run: |
          sudo apt-get install -y clang libssl-dev llvm libudev-dev protobuf-compiler pkg-config

      - name: Install mac dependencies
        if: startsWith(matrix.os, 'macos')
        run: brew install protobuf

      - uses: rui314/setup-mold@v1

      - name: Install
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}

      - uses: taiki-e/upload-rust-binary-action@v1
        if: (matrix.os == '' || startsWith(matrix.os, 'ubuntu'))
        with:
          bin: argon-node
          features: metadata-hash
          target: ${{ matrix.target }}
          archive: $bin-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: taiki-e/upload-rust-binary-action@v1
        if: (!startsWith(matrix.os, 'windows'))
        with:
          bin: argon-notary
          target: ${{ matrix.target }}
          archive: $bin-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: argon-localchain
          target: ${{ matrix.target }}
          archive: $bin-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: taiki-e/upload-rust-binary-action@v1
        if: (matrix.target == 'x86_64-unknown-linux-gnu')
        with:
          bin: argon-oracle
          # TODO: deactivate this feature when we have price liquidity
          features: simulated-prices
          target: ${{ matrix.target }}
          archive: $bin-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: argon-bitcoin-cli
          target: ${{ matrix.target }}
          archive: $bin-$tag-$target
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload linux binaries to workflow
        if: (matrix.os == '' || startsWith(matrix.os, 'ubuntu'))
        uses: actions/upload-artifact@v4
        with:
          name: bins-${{ matrix.target }}
          path: target/${{matrix.target}}/release/argon-*
          if-no-files-found: error

  build-image:
    needs:
      - upload-assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: bins-x86_64-unknown-linux-gnu
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: ./amd64

      - name: Download amd artifacts
        uses: actions/download-artifact@v4
        with:
          name: bins-aarch64-unknown-linux-gnu
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path: ./arm64

      - name: Argon Node
        uses: ./.github/templates/docker
        with:
          image: ghcr.io/argonprotocol/argon-miner
          bin: argon-node
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flavor: latest=true
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Notary
        uses: ./.github/templates/docker
        with:
          image: ghcr.io/argonprotocol/argon-notary
          bin: argon-notary
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flavor: latest=true
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
